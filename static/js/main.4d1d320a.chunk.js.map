{"version":3,"sources":["APIs/covid.js","APIs/cats.js","components/banner.js","components/searchBar.js","components/columns.js","components/dataTable.js","components/processData.js","components/mainFunctional.js","index.js"],"names":["covid","getCurrentCovidStats","axios","get","response","data","getHistoricDailyCovidStats","cats","get100Cats","getRandomCat","Banner","url","this","props","image","map","e","className","src","alt","height","Component","SearchBar","onChange","id","value","hidden","placeholder","onClick","numericKeys","COLUMNS","Header","Footer","accessor","sticky","Cell","date","Date","String","substring","isNaN","console","log","dateOnly","valueOf","getTimezoneOffset","format","passedProps","onDelete","row","values","state","DataTable","columns","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","gotoPage","pageCount","setPageSize","prepareRow","pageSize","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","onSort","addClassSymbols","render","getRowProps","cells","cell","getCellProps","disabled","length","type","defaultValue","pageNumber","target","Number","style","width","ProcessData","config","useState","sortConfig","setSortConfig","useMemo","sortedData","sort","a","b","key","direction","requestSort","SortData","filteredData","search","text","filter","dt","includes","option","compare","parseInt","toString","toLowerCase","filterData","name","undefined","MainFunctional","setData","clickCount","setClickCount","setImage","inputText","setInputText","useEffect","then","cat","catch","error","handleClick","click","document","getElementById","lowerCaseText","ReactDOM"],"mappings":"wMAKMA,EAAQ,CACZC,qBAAqB,WAAD,sCAAE,uHAEKC,IAAMC,IAC3B,wDAHgB,cAEZC,EAFY,yBAKXA,EAASC,MALE,wHAAF,kDAAC,GAUrBC,2BAA2B,WAAD,sCAAE,uHAEDJ,IAAMC,IAC3B,sDAHsB,cAElBC,EAFkB,yBAKjBA,EAASC,MALQ,wHAAF,kDAAC,IAYdL,ICvBTO,EAAO,CACXC,WAAW,WAAD,sCAAE,uHAEeN,IAAMC,IAC3B,wDAHM,cAEFC,EAFE,yBAKDA,EAASC,MALR,wHAAF,kDAAC,GAUXI,aAAa,WAAD,sCAAE,uHAEaP,IAAMC,IAC3B,8CAHQ,cAEJC,EAFI,yBAKHA,EAASC,MALN,wHAAF,kDAAC,IAYAE,I,uCC1BTG,E,4JACJ,WACE,IAAIC,EAAM,GAGV,OAFIC,KAAKC,MAAMC,QAAOH,EAAMC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEL,GAAT,KAG/C,sBAAKM,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,QAAQC,IAAKP,EAAKQ,IAAI,MAAMC,OAAO,YAEpD,oBAAIH,UAAU,YAAd,iCAGL,K,GAbkBI,aAgBNX,IChBTY,E,4JACJ,WAAU,IAAD,OACP,OACE,sBAAKL,UAAU,mBAAf,UACE,yBACEA,UAAU,eACVM,SAAUX,KAAKC,MAAMU,SACrBC,GAAG,eAHL,UAKE,wBAAQC,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,wBAAd,iCAEF,yBACER,UAAU,eACVM,SAAUX,KAAKC,MAAMU,SACrBC,GAAG,gBACHE,QAAM,EAJR,UAME,wBAAQD,MAAM,UAAd,oBACA,wBAAQA,MAAM,OAAd,uBAEF,uBACER,UAAU,eACVM,SAAUX,KAAKC,MAAMU,SACrBC,GAAG,aACHG,YAAY,mBAEd,wBAAQC,QAAS,kBAAM,EAAKf,MAAMe,QAAQ,EAAzB,EAAjB,6BAGL,K,GAjCqBP,aAoCTC,I,QCnCFO,EAAc,CACzB,WACA,mBACA,yBAGWC,EAAU,CACrB,CACEC,OAAQ,OACRC,OAAQ,OACRC,SAAU,OACVC,OAAQ,OACRC,KAAM,YAAgB,IAAbV,EAAY,EAAZA,MACHW,EAAO,IAAIC,KACbC,OAAOb,GAAOc,UAAU,EAAG,GACzB,IACAD,OAAOb,GAAOc,UAAU,EAAG,GAC3B,IACAD,OAAOb,GAAOc,UAAU,EAAG,IAI3BC,MAAMJ,KACRK,QAAQC,IAAI,6CACZN,EAAO,IAAIC,KAAK,eAGlB,IAAMM,EAAW,IAAIN,KACnBD,EAAKQ,UAAuC,GAA3BR,EAAKS,oBAA2B,KAGnD,OAAOC,YAAOH,EAAU,aACzB,GAEH,CACEZ,OAAQ,QACRC,OAAQ,QACRC,SAAU,QACVC,OAAQ,QAEV,CACEH,OAAQ,cACRC,OAAQ,mBACRC,SAAU,mBACVC,OAAQ,QAEV,CACEH,OAAQ,eACRC,OAAQ,eACRC,SAAU,wBACVC,OAAQ,QAEV,CACEH,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,OAAQ,OACRC,KAAM,SAACtB,GACL,OACE,wBACEI,UAAU,SACVW,QAAS,WACPf,EAAMkC,YAAYC,SAChBnC,EAAMoC,IAAIC,OAAOd,KACjBvB,EAAMoC,IAAIC,OAAOC,MAEpB,EAPH,mBAYH,I,uBCvEQC,EAAY,SAACvC,GACxB,IAAQwC,EAAkBxC,EAAlBwC,QAAShD,EAASQ,EAATR,KAEjB,EAeIiD,mBACF,CACED,UACAhD,OACAkD,aAAc,CAAEC,UAAW,IAE7BC,iBApBAC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,SACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,gBACAC,EARF,EAQEA,YACAC,EATF,EASEA,YACAf,EAVF,EAUEA,MACAgB,EAXF,EAWEA,SACAC,EAZF,EAYEA,UACAC,EAbF,EAaEA,YACAC,EAdF,EAcEA,WAUMd,EAAwBL,EAAxBK,UAAWe,EAAapB,EAAboB,SAEnB,OACE,gCACE,kDACMb,KADN,IAEEzC,UAAU,0DAFZ,UAIE,uBAAOA,UAAU,aAAjB,SACG2C,EAAa7C,KAAI,SAACyD,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQ3D,KAAI,SAAC4D,GAAD,OACvB,8CACMA,EAAOC,kBADb,IAEEpD,GAAImD,EAAOnD,GACXI,QAAS,WAEW,WAAd+C,EAAOnD,IAAiBX,EAAMgE,OAAOF,EAAOnD,GACjD,EACDP,UAAWJ,EAAMiE,gBAAgBH,EAAOnD,IAP1C,SASGmD,EAAOI,OAAO,YAVM,MAFX,MAkBpB,iDAAWpB,KAAX,aACGE,EAAK9C,KAAI,SAACkC,GAET,OADAqB,EAAWrB,GAET,8CAAQA,EAAI+B,eAAZ,aACG/B,EAAIgC,MAAMlE,KAAI,SAACmE,GACd,OACE,8CAAQA,EAAKC,gBAAb,aACGD,EAAKH,OAAO,OAAQ,CAAEhC,YAAalC,MAGzC,MAGN,WAGL,gCACE,wBAAQe,QAAS,kBAAMuC,EAAS,EAAf,EAAmBiB,UAAWpB,EAA/C,SACG,OACO,IACV,wBAAQpC,QAAS,kBAAMmC,GAAN,EAAsBqB,UAAWpB,EAAlD,sBAEU,IACV,wBAAQpC,QAAS,kBAAMkC,GAAN,EAAkBsB,UAAWnB,EAA9C,kBAEU,IACV,wBAAQrC,QAAS,kBAAMuC,EAASC,EAAY,EAA3B,EAA+BgB,UAAWnB,EAA3D,SACG,OACO,IACV,wCACO,IACL,mCACGT,EAAY,EADf,OACsBU,EAAYmB,UACxB,OAEZ,iDACgB,IACd,uBACEC,KAAK,SACLC,aAAc/B,EAAY,EAC1BjC,SAAU,SAACP,GACT,IAAMwE,EAAaxE,EAAEyE,OAAOhE,MACxBiE,OAAO1E,EAAEyE,OAAOhE,OAAS,EACzB,EACJ0C,EAASqB,EACV,EACDG,MAAO,CAAEC,MAAO,aAEZ,IACR,wBACEnE,MAAO8C,EACPhD,SAAU,SAACP,GAAD,OAAOqD,EAAYqB,OAAO1E,EAAEyE,OAAOhE,OAAnC,EAFZ,SAIG,CAAC,GAAI,GAAI,IAAIV,KAAI,SAACwD,GAAD,OAChB,yBAAuB9C,MAAO8C,EAA9B,kBACQA,IADKA,EADG,WAS3B,EC5BcsB,EA1BK,SAAChF,GACnB,MA/De,SAACR,GAAyB,IAAnByF,EAAkB,uDAAT,KAC/B,EAAoCC,mBAASD,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAiCA,MAAO,CAAE5F,KA9BU6F,mBAAQ,WACzB,IAAIC,EAAU,YAAO9F,GAerB,OAdmB,OAAf2F,GACFG,EAAWC,MAAK,SAACC,EAAGC,GAElB,OAAID,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACH,cAAzBP,EAAWQ,WAA6B,EAAI,EAGjDH,EAAEL,EAAWO,KAAOD,EAAEN,EAAWO,KACH,cAAzBP,EAAWQ,UAA4B,GAAK,EAG9C,CACR,IAEIL,CACR,GAAE,CAAC9F,EAAM2F,IAaiBS,YAXP,SAACF,GACnB,IAAIC,EAAY,YAEdR,GACAA,EAAWO,MAAQA,GACM,cAAzBP,EAAWQ,YAEXA,EAAY,cAEdP,EAAc,CAAEM,MAAKC,aACtB,EACuCR,aACzC,CA4B2CU,CAAS7F,EAAMR,MAAjDA,EAAR,EAAQA,KAAMoG,EAAd,EAAcA,YAAaT,EAA3B,EAA2BA,WAUvBW,EApCa,SAAC9F,EAAOR,GACzB,IAAM8F,EAAU,YAAO9F,GACjBuG,EAAS/F,EAAM+F,OACrB,MAAoB,KAAhBA,EAAOC,KACFV,EAEAA,EAAWW,QAAO,SAACC,GAExB,OAAIlG,EAAMgB,YAAYmF,SAASJ,EAAOK,QACb,YAAnBL,EAAOM,QACFH,EAAGlG,EAAM+F,OAAOK,SAAWE,SAASP,EAAOC,KAAM,IAEjDE,EAAGlG,EAAM+F,OAAOK,SAAWE,SAASP,EAAOC,KAAM,IAInDE,EAAGlG,EAAM+F,OAAOK,QACpBG,WACAC,cACAL,SAASJ,EAAOC,KAEtB,GAEJ,CAaoBS,CAAWzG,EAAOR,GAErC,OACE,cAAC,EAAD,CACEuG,OAAQ/F,EAAM+F,OACdvG,KAAMsG,EACNtD,QAASvB,EACTkB,SAAUnC,EAAMmC,SAChB6B,OAAQ4B,EACR5E,YAAahB,EAAMgB,YACnBiD,gBAjBoB,SAACyC,GACvB,GAAKvB,EAGL,OAAOA,EAAWO,MAAQgB,EAAOvB,EAAWQ,eAAYgB,CACzD,GAeF,ECFcC,MAhFf,WACE,MAAwB1B,mBAAS,IAAjC,mBAAO1F,EAAP,KAAaqH,EAAb,KACA,EAAoC3B,mBAAS,GAA7C,mBAAO4B,EAAP,KAAmBC,EAAnB,KACA,EAA0B7B,mBAAS,MAAnC,mBAAOjF,EAAP,KAAc+G,EAAd,KACA,EAAkC9B,mBAAS,CACzCkB,OAAQ,GACRJ,KAAM,GACNK,QAAS,KAHX,mBAAOY,EAAP,KAAkBC,EAAlB,KAOAC,qBAAU,WACRhI,EAAMC,uBAAuBgI,MAAK,SAAC7H,GAEjCqC,QAAQC,IAAI,WAAYtC,GACxBsH,EAAQtH,EACT,GACF,GAAE,IAGH4H,qBAAU,WACRE,EACGzH,eACAwH,MAAK,SAAC7H,GACLqC,QAAQC,IAAI,WAAYtC,GACxByH,EAASzH,EACV,IAEA+H,OAAM,SAACC,GACN3F,QAAQC,IAAI,QAAS0F,EACtB,GACJ,GAAE,CAACT,IAGJ,IAAMU,EAAc,SAACC,GACnB7F,QAAQC,IAAI,sBAAuBiF,GACnCC,EAAcD,EAAaW,EAC5B,EA6BD,OACE,gCACE,cAAC,EAAD,CAAQxH,MAAOA,EAAOc,QAASyG,IAC/B,cAAC,EAAD,CAAW9G,SApBG,WAChB,IAAI0F,EAASsB,SAASC,eAAe,gBAAgB/G,MACjDyF,EAAU,GAGVrF,EAAYmF,SAASC,IACvBsB,SAASC,eAAe,iBAAiB9G,QAAS,EAClDwF,EAAUqB,SAASC,eAAe,iBAAiB/G,OAEnD8G,SAASC,eAAe,iBAAiB9G,QAAS,EAEpD,IAAI+G,EAAgBF,SACjBC,eAAe,cACf/G,MAAM4F,cACTU,EAAa,CAAEd,OAAQA,EAAQJ,KAAM4B,EAAevB,QAASA,GAC9D,EAKqCtF,QAASyG,IAC3C,cAAC,EAAD,CACEzB,OAAQkB,EACRzH,KAAMA,EACN2C,SAjCe,SAACZ,EAAMe,GAC1BV,QAAQC,IAAI,uBAAwBN,EAAMe,GAC1C,IAAMwD,EAAetG,EAAKyG,QACxB,SAACC,GAAD,OAAQA,EAAG3E,OAASA,GAAQ2E,EAAG5D,QAAUA,CAAzC,IAEFuE,EAAQf,EACT,EA4BK9E,YAAaA,MAIpB,E,YCjFD6G,IAAS3D,OAAO,cAAC,EAAD,IAAoBwD,SAASC,eAAe,Q","file":"static/js/main.4d1d320a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//documentation @https://covidtracking.com/data/api\r\n//feel free to add more functions!\r\n\r\nconst covid = {\r\n  getCurrentCovidStats: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.covidtracking.com/v1/states/current.json\"\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n  getHistoricDailyCovidStats: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.covidtracking.com/v1/states/daily.json\"\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default covid;\r\n","import axios from \"axios\";\r\n\r\n//documentation @https://docs.thecatapi.com/\r\n//feel free to add more functions!\r\n\r\nconst cats = {\r\n  get100Cats: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.thecatapi.com/v1/images/search?limit=100\"\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  },\r\n  getRandomCat: async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.thecatapi.com/v1/images/search\"\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default cats;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Banner extends Component {\r\n  render() {\r\n    let url = \"\";\r\n    if (this.props.image) url = this.props.image.map((e) => e.url);\r\n\r\n    return (\r\n      <div className=\"banner\">\r\n        <div className=\"image\">\r\n          <img className=\"image\" src={url} alt=\"cat\" height=\"100px\"></img>\r\n        </div>\r\n        <h1 className=\"display-3\">Data Table Search</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Banner;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"input-group mb-3\">\r\n        <select\r\n          className=\"selectpicker\"\r\n          onChange={this.props.onChange}\r\n          id=\"searchOption\"\r\n        >\r\n          <option value=\"date\">Date</option>\r\n          <option value=\"state\">State</option>\r\n          <option value=\"totalTestResults\">TotalTestResults</option>\r\n          <option value=\"positive\">Positive</option>\r\n          <option value=\"hospitalizedCurrently\">Hospitalizations</option>\r\n        </select>\r\n        <select\r\n          className=\"selectpicker\"\r\n          onChange={this.props.onChange}\r\n          id=\"compareOption\"\r\n          hidden\r\n        >\r\n          <option value=\"greater\">≥</option>\r\n          <option value=\"less\">≤</option>\r\n        </select>\r\n        <input\r\n          className=\"form-control\"\r\n          onChange={this.props.onChange}\r\n          id=\"searchText\"\r\n          placeholder=\"Filter data...\"\r\n        />\r\n        <button onClick={() => this.props.onClick(1)}>Refresh Image</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport const numericKeys = [\r\n  \"positive\",\r\n  \"totalTestResults\",\r\n  \"hospitalizedCurrently\"\r\n];\r\n\r\nexport const COLUMNS = [\r\n  {\r\n    Header: \"Date\",\r\n    Footer: \"Date\",\r\n    accessor: \"date\",\r\n    sticky: \"left\",\r\n    Cell: ({ value }) => {\r\n      let date = new Date(\r\n        String(value).substring(0, 4) +\r\n          \"-\" +\r\n          String(value).substring(4, 6) +\r\n          \"-\" +\r\n          String(value).substring(6, 9)\r\n      );\r\n\r\n      // Error check if date is valid\r\n      if (isNaN(date)) {\r\n        console.log(\"Error with date, defaulting to 2020-01-01\");\r\n        date = new Date(\"2020-01-01\");\r\n      }\r\n\r\n      const dateOnly = new Date(\r\n        date.valueOf() + date.getTimezoneOffset() * 60 * 1000\r\n      );\r\n\r\n      return format(dateOnly, \"yyyy-MM-dd\");\r\n    }\r\n  },\r\n  {\r\n    Header: \"State\",\r\n    Footer: \"State\",\r\n    accessor: \"state\",\r\n    sticky: \"left\"\r\n  },\r\n  {\r\n    Header: \"Total Tests\",\r\n    Footer: \"totalTestResults\",\r\n    accessor: \"totalTestResults\",\r\n    sticky: \"left\"\r\n  },\r\n  {\r\n    Header: \"Hospitalized\",\r\n    Footer: \"Hospitalized\",\r\n    accessor: \"hospitalizedCurrently\",\r\n    sticky: \"left\"\r\n  },\r\n  {\r\n    Header: \"Delete\",\r\n    Footer: \"Delete\",\r\n    accessor: \"delete\",\r\n    sticky: \"left\",\r\n    Cell: (props) => {\r\n      return (\r\n        <button\r\n          className=\"delete\"\r\n          onClick={() => {\r\n            props.passedProps.onDelete(\r\n              props.row.values.date,\r\n              props.row.values.state\r\n            );\r\n          }}\r\n        >\r\n          &#x2715;\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { useTable, usePagination } from \"react-table\";\r\n\r\nexport const DataTable = (props) => {\r\n  const { columns, data } = props;\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 }\r\n    },\r\n    usePagination\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n  //console.log(columns);\r\n  return (\r\n    <div>\r\n      <table\r\n        {...getTableProps()}\r\n        className=\"table table-hover table-striped table-bordered table-sm\"\r\n      >\r\n        <thead className=\"table-dark\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps()}\r\n                  id={column.id}\r\n                  onClick={() => {\r\n                    // don't sort on delete column\r\n                    if (column.id !== \"delete\") props.onSort(column.id);\r\n                  }}\r\n                  className={props.addClassSymbols(column.id)}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\", { passedProps: props })}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </button>{\" \"}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          Previous\r\n        </button>{\" \"}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          Next\r\n        </button>{\" \"}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </button>{\" \"}\r\n        <span>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          | Go to page:{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>{\" \"}\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}\r\n        >\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { DataTable } from \"./dataTable\";\r\nimport { COLUMNS } from \"./columns\";\r\n\r\nconst SortData = (data, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n\r\n  // cache sorted data\r\n  const sortedData = useMemo(() => {\r\n    let sortedData = [...data];\r\n    if (sortConfig !== null) {\r\n      sortedData.sort((a, b) => {\r\n        // asecending\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        // descending\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        // equal\r\n        return 0;\r\n      });\r\n    }\r\n    return sortedData;\r\n  }, [data, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n  return { data: sortedData, requestSort, sortConfig };\r\n};\r\n\r\nconst filterData = (props, data) => {\r\n  const sortedData = [...data];\r\n  const search = props.search;\r\n  if (search.text === \"\") {\r\n    return sortedData;\r\n  } else {\r\n    return sortedData.filter((dt) => {\r\n      // compare numeric input\r\n      if (props.numericKeys.includes(search.option)) {\r\n        if (search.compare === \"greater\") {\r\n          return dt[props.search.option] >= parseInt(search.text, 10);\r\n        } else {\r\n          return dt[props.search.option] <= parseInt(search.text, 10);\r\n        }\r\n      } else {\r\n        // String contains input\r\n        return dt[props.search.option]\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(search.text);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst ProcessData = (props) => {\r\n  const { data, requestSort, sortConfig } = SortData(props.data);\r\n\r\n  // adds ascending or descending arrow\r\n  const addClassSymbols = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n\r\n  let filteredData = filterData(props, data);\r\n\r\n  return (\r\n    <DataTable\r\n      search={props.search}\r\n      data={filteredData}\r\n      columns={COLUMNS}\r\n      onDelete={props.onDelete}\r\n      onSort={requestSort}\r\n      numericKeys={props.numericKeys}\r\n      addClassSymbols={addClassSymbols}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProcessData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport covid from \"../APIs/covid\";\r\nimport cat from \"../APIs/cats\";\r\nimport Banner from \"./banner\";\r\nimport SearchBar from \"./searchBar\";\r\nimport { numericKeys } from \"./columns\";\r\nimport ProcessData from \"./processData\";\r\n\r\nfunction MainFunctional() {\r\n  const [data, setData] = useState([]);\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [image, setImage] = useState(null);\r\n  const [inputText, setInputText] = useState({\r\n    option: \"\",\r\n    text: \"\",\r\n    compare: \"\"\r\n  });\r\n\r\n  // get covid data\r\n  useEffect(() => {\r\n    covid.getCurrentCovidStats().then((response) => {\r\n      //covid.getHistoricDailyCovidStats().then((response) => {\r\n      console.log(\"response\", response);\r\n      setData(response);\r\n    });\r\n  }, []);\r\n\r\n  // get random cat image, refresh when click count is changed\r\n  useEffect(() => {\r\n    cat\r\n      .getRandomCat()\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        setImage(response);\r\n      })\r\n      // catch network error\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  }, [clickCount]);\r\n\r\n  // handle image refresh button\r\n  const handleClick = (click) => {\r\n    console.log(\"Handle Click Called\", clickCount);\r\n    setClickCount(clickCount + click);\r\n  };\r\n\r\n  // handle delete data button\r\n  const handleDelete = (date, state) => {\r\n    console.log(\"Handle Delete Called\", date, state);\r\n    const filteredData = data.filter(\r\n      (dt) => dt.date !== date || dt.state !== state\r\n    );\r\n    setData(filteredData);\r\n  };\r\n\r\n  // handle user inputs in search bar\r\n  let handleInput = () => {\r\n    let option = document.getElementById(\"searchOption\").value;\r\n    let compare = \"\";\r\n\r\n    // unhide numeric comparator for numericKeys\r\n    if (numericKeys.includes(option)) {\r\n      document.getElementById(\"compareOption\").hidden = false;\r\n      compare = document.getElementById(\"compareOption\").value;\r\n    } else {\r\n      document.getElementById(\"compareOption\").hidden = true;\r\n    }\r\n    let lowerCaseText = document\r\n      .getElementById(\"searchText\")\r\n      .value.toLowerCase();\r\n    setInputText({ option: option, text: lowerCaseText, compare: compare });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Banner image={image} onClick={handleClick} />\r\n      <SearchBar onChange={handleInput} onClick={handleClick}></SearchBar>\r\n      <ProcessData\r\n        search={inputText}\r\n        data={data}\r\n        onDelete={handleDelete}\r\n        numericKeys={numericKeys}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainFunctional;\r\n","import ReactDOM from \"react-dom\";\nimport MainFunctional from \"./components/mainFunctional\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nReactDOM.render(<MainFunctional />, document.getElementById(\"root\"));\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}